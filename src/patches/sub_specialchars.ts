/* eslint-disable */
// @ts-nocheck

// Generated by compiling ./src/patches/sub_specialchars.rb
// reference: https://docs.asciidoctor.org/asciidoctor.js/latest/extend/extensions/compile-ruby-extension/

function patch() {

Opal.queue(function(Opal) {/* Generated by Opal 1.7.3 */
  var $module = Opal.module, $const_set = Opal.const_set, $hash2 = Opal.hash2, $truthy = Opal.truthy, $def = Opal.def, $nesting = [], $$ = Opal.$r($nesting), nil = Opal.nil;

  Opal.add_stubs('include?,gsub');
  
  nil;
  return (function($base, $parent_nesting) {
    var self = $module($base, 'Substitutors');

    var $nesting = [self].concat($parent_nesting), $$ = Opal.$r($nesting);

    
    $const_set($nesting[0], 'SpecialCharsRx', /[<{&}>]/);
    $const_set($nesting[0], 'SpecialCharsTr', $hash2([">", "<", "&", "{", "}"], {">": "&gt;", "<": "&lt;", "&": "&amp;", "{": "&lbrace;", "}": "&rbrace;"}));
    return $def(self, '$sub_specialchars', function $$sub_specialchars(text) {
      
      if ((((($truthy(text['$include?'](">")) || ($truthy(text['$include?']("&")))) || ($truthy(text['$include?']("<")))) || ($truthy(text['$include?']("{")))) || ($truthy(text['$include?']("}"))))) {
        
        return text.$gsub($$('SpecialCharsRx'), $$('SpecialCharsTr'));
      } else {
        return text
      }
    });
  })($$('Asciidoctor'), $nesting);
});


}
export default { patch };
